<launch>
  <arg name="use_sim_time" default="true" />
  <arg name="gui" default="true" />
  <arg name="headless" default="false" />
  <arg name="world_name" default="$(find jackal_velodyne)/worlds/simple_room.world" />

  <!-- Short-term hack to support the original front_laser:=true argument for spawning
       the simulator. This will be removed in favour of using the config:=x arg instead. -->
  <arg name="front_laser" default="false" />
  <arg name="default_config" value="front_laser" if="$(arg front_laser)" />
  <arg name="default_config" value="base" unless="$(arg front_laser)" />
  <!-- end of hack -->

  <!-- Configuration of Jackal which you would like to simulate.
       See jackal_description for details. -->
  <arg name="config" default="$(arg default_config)" />

  <!-- Launch Gazebo with the specified world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="0" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="headless" value="$(arg headless)" />
    <arg name="world_name" value="$(arg world_name)" />
  </include>

  <!-- Load Jackal's description-->
  <param name="robot_description"
         command="$(find jackal_description)/scripts/env_run
                    $(find jackal_description)/urdf/configs/$(arg config)
                    $(find xacro)/xacro $(find jackal_velodyne)/urdf/jackal_velodyne.urdf.xacro
                    --inorder" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <!-- Control -->
  <include file="$(find jackal_control)/launch/control.launch" />
  <include file="$(find jackal_control)/launch/teleop.launch">
    <arg name="joystick" value="false"/>
  </include>

  <!-- Spawn Jackal -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
              args="-urdf -model jackal -param robot_description -x 4.13 -y -2.01 -z 0.25" />

  <!-- Rviz -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find jackal_velodyne)/launch/include/run.rviz" />

  <!-- TF -->
  <node pkg="jackal_velodyne" type="tf_publisher"    name="tf_publisher"    output="screen"/>

  <node pkg="tf" type="static_transform_publisher" name="front_cam_rotated_tf" args="0 0 0 -1.57079632679 0 -1.57079632679 rotated_front_cam front_cam 10" />
  <node pkg="tf" type="static_transform_publisher" name="front_cam_tf" args="0.05 0 0.055 0 0 0 velodyne rotated_front_cam 10" /> 

  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">

  <remap from="cloud_in" to="sensor/lidar/velodyne_points"/>
  <remap from="scan" to="/scan"/>
  <rosparam>
      transform_tolerance: 0.01
      min_height: -0.4
      max_height: 0.1

      angle_min: -3.1415
      angle_max: 3.1415
      angle_increment: 0.01
      scan_time: 0.1
      range_min: 0.1
      range_max: 100
      use_inf: false
      concurrency_level: 0
  </rosparam>
</node>
  
</launch>